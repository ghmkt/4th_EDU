# 제출 시 파일명은 Session12 이름 으로 해주세요.

# 1. 실습 코드를 활용하여 [scikit-learn의 기본 데이터 breast_cancer]에서 RandomForest를 활용해 양성, 악성을 예측 => 코드 + confusion matrix 캡쳐본 첨부
# 2. 실습 코드를 활용하여 [scikit-learn의 기본 데이터 breast_cancer]에서 Boosting을 활용해 양성, 악성을 예측 => 코드 + confusion matrix 캡쳐본 첨부

#1 import library, load data, check data
import numpy as np
import pandas as pd
import seaborn as sns
import xgboost
import matplotlib.pyplot as plt

from sklearn import datasets
breast_cancer = datasets.load_breast_cancer()

df = pd.DataFrame(breast_cancer.data, columns=breast_cancer.feature_names)
print(df.head())
print(df.describe())
print(df.info())

df['cancer'] = np.array([breast_cancer.target_names[i] for i in breast_cancer.target])
sns.pairplot(df, hue='cancer')
plt.show()

#2 divide data into x, y
#3 split data into train set, test set
from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(df[breast_cancer.feature_names], breast_cancer.target, 
                                                    test_size=0.25, stratify=breast_cancer.target, random_state=123456)

#4 use RandomForestClassifier and show confusion matrix
from sklearn.ensemble import RandomForestClassifier

rf = RandomForestClassifier(n_estimators=100, oob_score=True, random_state=123456)
rf.fit(X_train, y_train)

from sklearn.metrics import accuracy_score

predicted = rf.predict(X_test)
accuracy = accuracy_score(y_test, predicted)

print(f'Out-of-bag score estimate: {rf.oob_score_:.3}') #0.965
print(f'Mean accuracy score: {accuracy:.3}') #0.951

from sklearn.metrics import confusion_matrix

cm = pd.DataFrame(confusion_matrix(y_test, predicted), columns=breast_cancer.target_names, index=breast_cancer.target_names)

sns.heatmap(cm, annot=True)
plt.show()

#5 use XGBClassifier and show confusion matrix
xgb = xgboost.XGBClassifier(n_estimators=100, max_depth=2)
xgb.fit(X_train, y_train)

predicted_xgb = xgb.predict(X_test) 
accuracy_xgb = accuracy_score(y_test, predicted_xgb) #0.958

print(f'Mean accuracy score: {accuracy_xgb:.3}')

cm_xgb = pd.DataFrame(confusion_matrix(y_test, predicted_xgb), columns=breast_cancer.target_names, index=breast_cancer.target_names)
sns.heatmap(cm_xgb, annot=True)
plt.show()

#RandomForestClassifier를 사용했을 때와 XGB Classifier를 사용했을 때의 accuracy 차이가 그다지 큰 것 같지는 않다. confusion matrix를 봤을 때도 예측 성능은 비슷한 것으로 드러났다.
